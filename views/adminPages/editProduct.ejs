<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Edit Product</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />



  <style>
    body {
      background-color: #f8f9fa;
    }

    .container {
      margin: 20px auto;
      max-width: 600px;
    }

    .navbar {
      background-color: #f8f9fa;
    }

    h1 {
      text-align: center;
    }

    .form-group {
      margin-bottom: 20px;
    }

    #imageCount {
      margin-top: 5px;
    }

    img.product-image {
      height: 60px;
      width: 60px;
      border-radius: 5px;
      margin-right: 10px;
    }

    .image-preview {
      display: flex;
      flex-wrap: wrap;
    }

    .image-preview img {
      margin: 5px;
      max-width: 100px;
      max-height: 100px;
    }

    .image-box {
      border: 1px solid #ced4da;
      border-radius: 5px;
      padding: 5px;
      margin-right: 10px;
    }

    .error {
      color: red;
    }

    .preview-image {
      width: 100px;
      height: 100px;
    }

    .crop-img-conatiner {
      width: 300px;
      height: 300px;
      margin-bottom: 60px;
    }
  </style>
</head>

<body>
  <div class="container">
    <nav class="navbar navbar-light bg-light justify-content-between">
      <a href="/admin"><img src="./assets/img/logo.png" alt="gg"></a>
      <a href="/admin" style="text-decoration: none; color: black;">
        <h1>Jkart</h1>
      </a>
    </nav>
  </div>
  <div class="container">
    <h1>EDIT PRODUCT</h1>
    <form id="editProduct" enctype="multipart/form-data">
      <div class="form-group">
        <label for="productName">Product Name</label>
        <input type="text" value="<%=productDet.productName%>" name="productName" class="form-control" id="productName"
          maxlength="50" style="max-width: 200px;">
      </div>
      <div class="form-group">
        <label for="parentCategory">Parent Category</label>
        <select name="parentCategory" class="form-control" style="max-width: 200px;">
          <option disabled selected>
            <%= categoryDet.categoryName %>
          </option>
          <% for(let i=0;i<categoryDetail.length;i++){ %>
            <option value="<%=categoryDetail[i]._id%>">
              <%=categoryDetail[i].categoryName%>
            </option>
            <% } %>
        </select>
      </div>
      <div class="form-group">
        <span id="imageCount">
          <% if (productDet.productImage.length> 0) { %>
            <%=productDet.productImage.length%> images exist
              <% } else { %>
                No image exists
                <% } %>
        </span>
      </div>
      <div class="d-flex flex-wrap align-items-start" style="max-width: 350px;">
        <div class="image-preview">
          <% for(let i=0; i < productDet.productImage.length; i++) { %>
            <div class="image-box">
              <img src="assets/img/uploads/<%= productDet.productImage[i] %>" class="product-image">
              <button class="btn btn-danger" type="button"
                onclick="deleteFn('<%=productDet._id%>','<%= productDet.productImage[i]%>')"
                id="deleteButton<%= i %>">X</button>
            </div>
            <% } %>
        </div>
      </div>

      <script>
        async function deleteFn(productId, imageId) {
          Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
          }).then(async (result) => {
            if (result.isConfirmed) {
              let response = await fetch(`/admin/editProduct/imageDelete?imageId=${imageId}&productId=${productId}`, {
                method: 'POST'
              })
              let result = await response.json()
              if (result.success) {
                await Swal.fire({
                  icon: "success",
                  title: "Image Deleted",
                  showConfirmButton: false,
                  timer: 1500
                });
                window.location.reload()
              }
            }
          });

        }

      </script>
      <div class="form-group">
        <label for="images">Add image</label>
        <input accept="image/*" type="file" name="images" class="form-control-file" id="images" multiple>
        <div id="image-preview" style="max-width: 350px;"></div>
      </div>


      <div class="form-group">
        <label for="productPrice">Product Price</label>
        <input class="form-control" value="<%=productDet.productPrice%>" name="productPrice" type="text"
          id="productPrice" maxlength="50" style="max-width: 200px;">
      </div>
      <div class="form-group">
        <label for="productStock">Product Stock</label>
        <input class="form-control" value="<%=productDet.productStock%>" name="productStock" type="text"
          id="productStock" maxlength="50" style="max-width: 200px;">
      </div>
      <button type="submit" class="btn btn-success">Save</button>
    </form>
  </div>
  <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/jquery.validate.min.js"
    integrity="sha512-WMEKGZ7L5LWgaPeJtw9MBM4i5w5OSBlSjTjCtSnvFJGSVD26gE5+Td12qN5pvWXhuWaWcVwF++F7aqu9cvqP0A=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/additional-methods.min.js"
    integrity="sha512-TiQST7x/0aMjgVTcep29gi+q5Lk5gVTUPE9XgN0g96rwtjEjLpod4mlBRKWHeBcvGBAEvJBmfDqh2hfMMmg+5A=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>

    const imageArray = []
    // Function to handle file input change event and display image previews
    function previewImages() {
      var preview = document.getElementById('image-preview');
      preview.innerHTML = ''; // Clear previous preview

      var files = document.getElementById('images').files;
      for (var i = 0; i < files.length; i++) {
        var file = files[i];
        var reader = new FileReader();

        reader.onload = function (event) {
          var img = document.createElement('img');
          var div = document.createElement('div');
          div.className = "crop-img-conatiner"
          img.className = 'canvas-image';
          img.src = event.target.result;
          // console.log(event.target.result);
          // image.push(event.target.result)
          div.appendChild(img)
          preview.appendChild(div);

          // Initialize cropper for the image
          initializeCropper(img);
        }

        reader.readAsDataURL(file);
      }
    }

    function initializeCropper(image) {
      var cropper = new Cropper(image, {
        aspectRatio: NaN,
        viewMode: 1,
        autoCropArea: 1,
        cropBoxResizable: false,
        preview: '.preview'
      });

      // Add a button to crop the image
      var cropButton = document.createElement('button');
      cropButton.className = 'btn btn-primary';
      cropButton.innerText = 'Crop';
      cropButton.addEventListener('click', function (event) {
        event.preventDefault();
        cropper.getCroppedCanvas().toBlob(function (blob) {
          // Show the cropped image preview
          var previewImage = document.createElement('img');
          var deleteButton = document.createElement('button');
          previewImage.className = 'preview-image';

          deleteButton.textContent = 'Drop';
          deleteButton.className = 'btn btn-sm btn-danger';
          deleteButton.style.marginTop = '10px';
          deleteButton.addEventListener('click', () => {
            previewImage.parentNode.removeChild(previewImage);
            deleteButton.parentNode.removeChild(deleteButton);
            const index = imageArray.indexOf(blob);
            console.log(index);
            if (index !== -1) {
              console.log(index);
              imageArray.splice(index, 1);
            }
          });

          imageArray.push(blob)
          previewImage.src = URL.createObjectURL(blob); // Create a URL for the blob
          document.getElementById('image-preview').appendChild(previewImage);
          document.getElementById('image-preview').appendChild(deleteButton);
        });
      });
      image.parentNode.appendChild(cropButton);


    }


    // Attach the previewImages function to the change event of the file input
    document.getElementById('images').addEventListener('change', previewImages);
    $('#editProduct').validate({
      rules: {
        productName: {
          required: true,
        },
        productPrice: {
          required: true,
          pattern: "[0-9]+"
        },
        productStock: {
          required: true,
          pattern: "[0-9]+"
        }
      },
      submitHandler: async (form, event, blob) => {
        event.preventDefault();
        // Create a new FormData object
        const formData = new FormData(form);

        // Select the preview images
        var previewImages = document.querySelectorAll('.preview-image');
        console.log('preview', previewImages);

        // Loop through each preview image
        imageArray.forEach(function (previewImage, index) {

          console.log("imageeeeee", previewImage);

          formData.append('croppedImage' + index, previewImage);
        });

        // Append the original image Blob to FormData
        formData.append('originalImage', blob);

        let response = await fetch('/editProductsPost/<%=productDet._id%>', {
          method: 'POST',
          body: formData
        });
        let result = await response.json();
        if (result.exists) {
          await Swal.fire({
            icon: "error",
            title: "Product Already exists"
          });
        }
        if (result.success) {
          await Swal.fire({
            icon: "success",
            title: "Product Edited"
          });
          window.location.href = '/productManagement';
        }
        if (result.noValue) {
          await Swal.fire({
            icon: "error",
            title: "No Value in Product Name"
          });
        }
        if (result.noImage) {
          await Swal.fire({
            icon: "error",
            title: "Select at least 3 images"
          });
        }
        if(result.whitespaceAlert){
          await Swal.fire({
            icon: "error",
            title: "Enter proper format for product name"
          });
        }
      }
    });


  </script>
</body>

</html>